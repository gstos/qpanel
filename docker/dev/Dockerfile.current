# Builds a container with the version at src folder
FROM python:3.10.2-slim

# RUN apk add --ino-cache git py3-pip npm py3-babel tini swig gcc alpine-sdk python3-dev
RUN apt-get update && apt-get install -y tini npm swig gcc curl

# Copy project folders and configuration files
RUN mkdir -p /app
COPY ./src /app/src
COPY ./* /app/

# From now onwards, user will take care of the rest of the installation
RUN groupadd app && useradd -m -g app app && chown -R app:app /app
USER app

# Install Python poetry (HEAD)
RUN curl -sSL https://install.python-poetry.org | python3 -
# Alternatively you can install the latest stable (1.1) version:
# RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3
# For version 1.2 (not released yet) onwards:
# RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python3
ENV PATH "/home/app/.local/bin:$PATH:"

# Install app dependencies

# Install npm packages
WORKDIR /app
RUN npm install

# Python dependencies via poetry
ARG EXTRAS=""
RUN poetry env use $(python3 --version | sed "s/Python //") && poetry install -E $EXTRAS || poetry install
RUN poetry run pybabel compile -d ./src/qpanel/translations

ARG QPANEL_PORT=8080
ENV QPANEL_PORT=$QPANEL_PORT
EXPOSE $QPANEL_PORT

ENV PYTHONPATH "/app:/app/src:$PYTHONPATH"
WORKDIR /app/src

# tini: spawn a single child wait for it to exit all
# while reaping zombies and performing signal forwarding.
CMD ["tini", "--", "poetry", "run", "python3", "-m", "qpanel"]
